#!/bin/bash

echo -e "Mise à jour de repomanager"

if [ -z "$GITHUB_VERSION" ];then
    GITHUB_VERSION=$(curl -s -H 'Cache-Control: no-cache' "https://raw.githubusercontent.com/lbr38/repomanager/${UPDATE_BRANCH}/version" | grep 'VERSION=' | cut -d'=' -f2 | sed 's/"//g')
    if [ -z "$GITHUB_VERSION" ];then
        echo -e "[$ROUGE ERREUR $RESET] Impossible de trouver le numéro de version diponible sur github"
        clean_exit
    fi
fi

# Backup avant mise à jour
if [ "$UPDATE_BACKUP" == "yes" ];then
    echo -ne "\n → Backup avant mise à jour :\t\t" &&
    mkdir -p "${BASE_DIR}/backups" &&
    cd /tmp/ &&
    tar pczf"${DATE_AMJ}_${HEURE_HMS}_repomanager_backup.tar.gz" --exclude="${BASE_DIR}/backups" "${BASE_DIR}" "${WWW_DIR}" "${ETC_DIR}" &&
    if [ $? -eq "0" ];then
        echo -e "[$VERT OK $RESET]"
    else
        echo -e "[$ROUGE ERREUR $RESET] lors de la création de l'archive"
        clean_exit
    fi
fi
# Déplacement de l'archive dans backups/
mv /tmp/${DATE_AMJ}_${HEURE_HMS}_repomanager_backup.tar.gz ${BASE_DIR}/backups/

# Mise à jour
rm "${BASE_DIR}/update" -rf # Vidage du répertoire update
mkdir -p "${BASE_DIR}/update" &&
cd "${BASE_DIR}/update" &&

# Téléchargement du script intermédiaire de mise à jour :
wget --no-cache -q -O repomanager-autoupdate "https://raw.githubusercontent.com/lbr38/repomanager/${UPDATE_BRANCH}/update/repomanager-autoupdate"
if [ $? -ne "0" ];then
    echo -e "[$ROUGE ERREUR $RESET] lors du téléchargement du script de mise à jour"
    clean_exit
else
    # Exécution du script de mise à jour. On lui donne en paramètre la version de github à récupérer :
    chmod 750 repomanager-autoupdate
    exec "${BASE_DIR}/update/repomanager-autoupdate" $GITHUB_VERSION
    # Tout ce qui est après la commande exec ne sera jamais exécuté
fi